#
# Regards, the Alveare Solutions society.
#
# FoxFace Settings

SCRIPT_NAME='FxFa093pk01'
PS3='FoxFace> '
FOXFACE_SAFETY='on' #(on | off)
FOXFACE_LOGGING='on' #(on | off)
FOXFACE_AUTO_CHECKSUM='on' #(on | off)
FOXFACE_ENCRYPTION='AES-256-CBC'
DEVICE_ENCRYPTION='LUKS'
FOXFACE_CHECKSUM='MD5'
ENCRYPTION_BEHAVIOUR='Mirror'
DECRYPTION_BEHAVIOUR='Mirror'
DEFAULT=(
['log-file']="log/foxface.log"
['tmp-file']="/tmp/foxface-$RANDOM.tmp"
['file-editor']="${EDITOR:-vim}"
['log-lines']=100
['mount-dir']="/mnt"
['mapper-dir']="/dev/mapper"
['partition-file']="/proc/partitions"
)
LOGGING_LEVELS=(
'INFO'
'Q/A'
'OK'
'NOK'
'DONE'
'ERROR'
'WARNING'
'SYMBOL'
'DEBUG'
)
FOXFACE_CRYPTOSYSTEMS=(
'AES-256-CBC'
)
CHECKSUM_ALGORITHMS=(
['MD5']='md5sum'
['SHA1']='sha1sum'
['SHA256']='sha256sum'
['SHA512']='sha512sum'
)
ENCRYPTION_BEHAVIOURS=(
['Replace']='In case I/O files are specified, creates ciphertext file and shreds cleartext file. If encoding or decoding from STDOUT, no files will be created.'
['Mirror']='In case I/O files are specified, creates ciphertext file in the same directory as cleartext file. If encoding or decoding from STDOUT, creates ciphertext file in the current directory.'
['Archive']='In case I/O files are specified, creates ciphertext file in the same directory as cleartext file and archives it using a compression tool. If encoding or decoding from STDOUT, creates ciphertext archive in the current directory.'
['Archive-Replace']='In case I/O files are specified, creates ciphertext archive in the same directory as cleartext file and shreds cleartext file. If encoding or decoding from STDOUT, no archives will be created.'
['Archive-Mirror']='In case I/O files are specified, creates ciphertext file in the same directory as cleartext file and archives both. If encoding or decoding from STDOUT, creates ciphertext archive in the current directory.'
)
DECRYPTION_BEHAVIOURS=(
['Replace']='In case I/O files are specified, creates cleartext file and shreds ciphertext file. If encoding or decoding from STDOUT, no files will be created.'
['Mirror']='In case I/O files are specified, creates cleartext file in the same directory as ciphertext file. If encoding or decoding from STDOUT, creates cleartext file in the current directory.'
['Archive']='In case I/O files are specified, creates cleartext file in the same directory as ciphertext file and archives it using a compression tool. If encoding or decoding from STDOUT, creates cleartext archive in the current directory.'
['Archive-Replace']='In case I/O files are specified, creates cleartext archive in the same directory as ciphertext file and shreds cleartext file. If encoding or decoding from STDOUT, no archives will be created.'
['Archive-Mirror']='In case I/O files are specified, creates cleartext file in the same directory as ciphertext file and archives both. If encoding or decoding from STDOUT, creates cleartext archive in the current directory.'
)

# Dependencies

APT_DEPENDENCIES=(
'openssl'
'cryptsetup'
'md5sum'
'sha1sum'
'sha256sum'
'sha512sum'
'mkfs'
'e2label'
'awk'
'sed'
'shred'
'tar'
'vim'
'wc'
'dirname'
'basename'
'xargs'
'find'
'partprobe'
'fdisk'
)

# Text Colors

BLACK=`tput setaf 0`
RED=`tput setaf 1`
GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
BLUE=`tput setaf 4`
MAGENTA=`tput setaf 5`
CYAN=`tput setaf 6`
WHITE=`tput setaf 7`
RESET=`tput sgr0`

# Info

# TPUT Color Codes
#   Num  Colour    #define         R G B

#   0    black     COLOR_BLACK     0,0,0
#   1    red       COLOR_RED       1,0,0
#   2    green     COLOR_GREEN     0,1,0
#   3    yellow    COLOR_YELLOW    1,1,0
#   4    blue      COLOR_BLUE      0,0,1
#   5    magenta   COLOR_MAGENTA   1,0,1
#   6    cyan      COLOR_CYAN      0,1,1
#   7    white     COLOR_WHITE     1,1,1

# TPUT Text Modes
#   tput bold    # Select bold mode
#   tput dim     # Select dim (half-bright) mode
#   tput smul    # Enable underline mode
#   tput rmul    # Disable underline mode
#   tput rev     # Turn on reverse video mode
#   tput smso    # Enter standout (bold) mode
#   tput rmso    # Exit standout mode

# TPUT Cursor Movements
#   tput cup Y X # Move cursor to screen postion X,Y (top left is 0,0)
#   tput cuf N   # Move N characters forward (right)
#   tput cub N   # Move N characters back (left)
#   tput cuu N   # Move N lines up
#   tput ll      # Move to last line, first column (if no cup)
#   tput sc      # Save the cursor position
#   tput rc      # Restore the cursor position
#   tput lines   # Output the number of lines of the terminal
#   tput cols    # Output the number of columns of the terminal

# TPUT CLear and Insert
#   tput ech N   # Erase N characters
#   tput clear   # Clear screen and move the cursor to 0,0
#   tput el 1    # Clear to beginning of line
#   tput el      # Clear to end of line
#   tput ed      # Clear to end of screen
#   tput ich N   # Insert N characters (moves rest of line forward!)
#   tput il N    # Insert N lines

# TPUT Other
#   tput sgr0    # Reset text format to the terminal's default
#   tput bel     # Play a bell
